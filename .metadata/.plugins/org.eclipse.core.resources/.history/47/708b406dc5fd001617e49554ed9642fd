package dominio;

import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.stream.Collectors;

import com.mgiamberardino.jnetic.Individual.Factory;

public class ChromosomeFactory implements Factory<Chromosome, Wsdl> {

	private Map<String, Integer> ponderaciones;
	private Map<String, List<Wsdl>> serviceInterface;

	public ChromosomeFactory(Map<String, Integer> ponderaciones, Map<String, List<Wsdl>> serviceInterface) {
		super();
		this.ponderaciones = ponderaciones;
		this.serviceInterface = serviceInterface;
	}

	@Override
	public Chromosome build(List<Wsdl> genes) {		
		return new Chromosome(ponderaciones, genes);
	}

	@Override
	public Wsdl buildGen(Integer position) {
		// TODO Auto-generated method stub
		List<Wsdl> wsdls =  serviceInterface.entrySet().stream().collect(Collectors.toList()).get(position).getValue();
		
		return wsdls.get(new Random(System.currentTimeMillis()));
	}

	@Override
	public Chromosome buildRandom() {
		// TODO Auto-generated method stub
		return null;
	}

}
